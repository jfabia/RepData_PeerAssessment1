secTidySet <- secTidySet[order(secTidySet$subjectId, secTidySet$activityId),]
write.table(secTidySet, "secTidySet.txt", row.name=FALSE)
getwd()
rm(list=ls())
x <- rnorm(100)
hist()
hist(x)
y <- rnorm(100)
plot(x,y)
z <- rnorm(100)
plot(x,z)
plot(x,y)
par(mar = c(2,2,2,2))
plot(x,y)
par(mar = c(4,4,2,2))
plot(x,y)
plot(x,y, pch = 20)
plot(x,y, pch = 4)
plot(x,y, pch = 2)
plot(x,y, pch = 3)
example(points)
plot(x,y, pch = 20)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, pch = 20)
title("My scatterplot")
text(-2, -2, "Label")
legend("topleft", legend = "Data")
legend("topleft", legend = "Data", pch = 20)
fit <- lm(y~x)
abline(fit)
abline(fit, lwd = 3)
abline(fit, lwd = 3, col = 'blue')
plot(x,y, xlab = 'weight', ylab = 'height', main = 'Scatterplot', pch = 20)
fit <- lm(y~x)
abline(fit, lwd = 3, col = 'blue')
legend("topleft", legend = "Data", pch = 20)
z <- rpois(100, 2)
par(mfrow = c(2,1))
plot(x, y, pch = 20)
plot(x, z, pch = 19)
par("mar")
par(mar = c(2,2,1,1))
plot(x, y, pch = 20)
plot(x, z, pch = 19)
rm(list=ls())
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = 'green')
rug(ppm)
low
high
hist(ppm, col = 'green', break = '100')
hist(ppm, col = 'green', break = 100)
hist(ppm, col = 'green', breaks = 100)
rug(ppm)
hist(ppm, col = 'green')
abline(v12, lwd = 2)
abline(v=12, lwd = 2)
abline(v= median(ppm), lwd = 4, col = 'magenta')
abline(v= median(ppm), col = 'magenta', lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = 'wheat', main = 'Number of Countries in Each Region')
barplot(reg, col = "wheat", main = "Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot( x ~ y, data = pollution, col = "red")
boxplot( pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution, region == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = 'green')
hist(subset(pollution, region == "west")$pm25, col = 'green')
plot(pollution)
with(pollution, plot(latitude, pm25))
abline( h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, pollution$region == "west")
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
east <- subset(pollution, region == "east")
plot(east$latitude, east$pm25, main = "East")
?Devices
plot(faithful$eruptions, faithful$waiting)
with(faithful, plot(erumptions, waiting))
with(faithful, plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting, main = "Old Faithful Geyser data"))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting, main = "Old Faithful Geyser data"))
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, 'geyserplot.png')
dev.copy(png, file = 'geyserplot.png')
dev.off
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(car$speed),max(cars$dist),"SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xplot(Life.Exp ~ Income | region, state, c(4,1))
xyplot(Life.Exp ~ Income | region, state, c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
quit
0
exit
exit()
quit()
swirl()
library(swirl)
swirl()
boxplot(airquality$Month)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, airquality$Month == 5)
may <- subset(airquality, Month == 5)
k
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, col="blue", pch = 17)
notmay <- subset(airquality, Month != 5)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col="red", pch = 8)
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May", "Other Months"))
notmay <- subset(airquality, Month != 5)
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
getwd()
# Load the required libraries
library(data.table)
# Remove current variables in working environment
rm(list=ls())
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
# Load the required libraries
library(data.table)
# Remove current variables in working environment
rm(list=ls())
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
# Remove current variables in working environment
rm(list=ls())
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption.zip")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
getwd()
# Load the required libraries
library(data.table)
# Remove current variables in working environment
rm(list=ls())
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption.zip")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
# Remove current variables in working environment
rm(list=ls())
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption.zip")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
# Since '?' are treated as missing values, replace them with NA
power.data[ power.data == "?"] <- NA
# Transform the Date column as a Date class
power.data$Date <- as.Date(power.data$Date, "%d/%m/%Y")
power.data <-
subset(power.data, Date == as.Date("2007-02-01") | Date == as.Date("2007-02-02"))
# Create a new column, Timestamp, that records both the date and the time.
power.data$Timestamp <- as.POSIXct(paste(power.data$Date, power.data$Time))
for(i in 1:10){
if(!(names(power.data)[i] %in% c("Date","Time", "Timestamp"))){
power.data[,i] <- as.numeric((power.data[,i]))
}
}
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
par(mfrow = c(1,1))
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
for(i in 1:10){
if(!(names(power.data)[i] %in% c("Date","Time", "Timestamp"))){
power.data[,i] <- as.numeric((power.data[,i]))
}
}
# Load the required libraries
library(data.table)
# Remove current variables in working environment
rm(list=ls())
# Reset the plot margins
par(mfrow = c(1,1))
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption.zip")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
# Since '?' are treated as missing values, replace them with NA
power.data[ power.data == "?"] <- NA
# Transform the Date column as a Date class
power.data$Date <- as.Date(power.data$Date, "%d/%m/%Y")
power.data <-
subset(power.data, Date == as.Date("2007-02-01") | Date == as.Date("2007-02-02"))
# Create a new column, Timestamp, that records both the date and the time.
power.data$Timestamp <- as.POSIXct(paste(power.data$Date, power.data$Time))
plot(power.data$Timestamp, power.data$Global_active_power, type = 'l', xlab = "", ylab = "Global Active Power (kilowatts)")
plot(power.data$Timestamp, power.data$Sub_metering_1, type = 'l', xlab = "", ylab = "Energy sub metering")
lines(power.data$Timestamp, power.data$Sub_metering_2, col = 'red')
lines(power.data$Timestamp, power.data$Sub_metering_3, col = 'blue')
legend('topright', legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col = c("black","red","blue"), lwd=2.5, lty = 1)
par(mfrow = c(2,2))
plot(power.data$Timestamp, power.data$Global_active_power, type = 'l', xlab = "", ylab = "Global Active Power")
plot(power.data$Timestamp, power.data$Voltage, type = 'l', xlab = "datetime", ylab = "Voltage")
plot(power.data$Timestamp, power.data$Sub_metering_1, type = 'l', xlab = "", ylab = "Energy sub metering")
lines(power.data$Timestamp, power.data$Sub_metering_2, col = 'red')
lines(power.data$Timestamp, power.data$Sub_metering_3, col = 'blue')
legend('topright', legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col = c("black","red","blue"), lwd=2.5, lty = 1, bty = 'n')
plot(power.data$Timestamp, power.data$Global_reactive_power, type = 'l', xlab = "datetime", ylab = "Global_reactive_power")
# Load the required libraries
library(data.table)
# Remove current variables in working environment
rm(list=ls())
# Reset the plot margins
par(mfrow = c(1,1))
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption.zip")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
# Since '?' are treated as missing values, replace them with NA
power.data[ power.data == "?"] <- NA
# Transform the Date column as a Date class
power.data$Date <- as.Date(power.data$Date, "%d/%m/%Y")
power.data <-
subset(power.data, Date == as.Date("2007-02-01") | Date == as.Date("2007-02-02"))
# Create a new column, Timestamp, that records both the date and the time.
power.data$Timestamp <- as.POSIXct(paste(power.data$Date, power.data$Time))
# Create a histogram of Global Active Power and print it as a PNG file.
png('plot1.png', width = 480, height = 480, bg='transparent')
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
dev.off()
# Return to default margins
par(mfrow = c(1,1))
png('plot1.png', width = 480, height = 480, bg='transparent')
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
# Load the required libraries
library(data.table)
# Remove current variables in working environment
rm(list=ls())
# Reset the plot margins
par(mfrow = c(1,1))
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption.zip")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
# Since '?' are treated as missing values, replace them with NA
power.data[ power.data == "?"] <- NA
# Transform the Date column as a Date class
power.data$Date <- as.Date(power.data$Date, "%d/%m/%Y")
power.data <-
subset(power.data, Date == as.Date("2007-02-01") | Date == as.Date("2007-02-02"))
# Create a new column, Timestamp, that records both the date and the time.
power.data$Timestamp <- as.POSIXct(paste(power.data$Date, power.data$Time))
# Transform the columns as numeric class
for(i in 1:10){
if(!(names(power.data)[i] %in% c("Date","Time", "Timestamp"))){
power.data[,i] <- as.numeric((power.data[,i]))
}
}
# Create a histogram of Global Active Power and print it as a PNG file.
png('plot1.png', width = 480, height = 480, bg='transparent')
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
dev.off()
# Return to default margins
par(mfrow = c(1,1))
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
# Load the required libraries
library(data.table)
# Remove current variables in working environment
rm(list=ls())
# Reset the plot margins
par(mfrow = c(1,1))
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption.zip")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
# Since '?' are treated as missing values, replace them with NA
power.data[ power.data == "?"] <- NA
# Transform the Date column as a Date class
power.data$Date <- as.Date(power.data$Date, "%d/%m/%Y")
power.data <-
subset(power.data, Date == as.Date("2007-02-01") | Date == as.Date("2007-02-02"))
# Create a new column, Timestamp, that records both the date and the time.
power.data$Timestamp <- as.POSIXct(paste(power.data$Date, power.data$Time))
# Transform the columns as numeric class
for(i in 1:10){
if(!(names(power.data)[i] %in% c("Date","Time", "Timestamp"))){
power.data[,i] <- as.numeric((power.data[,i]))
}
}
# Create a histogram of Global Active Power and print it as a PNG file.
png('plot1.png', width = 480, height = 480, bg='transparent')
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
dev.off()
# Return to default margins
par(mfrow = c(1,1))
# Load the required libraries
library(data.table)
# Remove current variables in working environment
rm(list=ls())
# Restart graphics settings to default
dev.off()
# Reset the plot margins
par(mfrow = c(1,1))
# Read the data for this project.
# If it is not available in the working directory,
# check if the original zip file name is in the working directory
# If it is available, unzip the file.
# If that isn't available, then download the file then unzip.
if(!file.exists("./household_power_consumption.txt")){
if(!file.exists("./exdata%2Fdata%2Fhousehold_power_consumption.zip")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
unzip("./exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
# Read the data with all columns treated as character class
power.data <- read.table("./household_power_consumption.txt", header = TRUE, sep = ";", stringsAsFactors = FALSE, dec = ".")
# Since '?' are treated as missing values, replace them with NA
power.data[ power.data == "?"] <- NA
# Transform the Date column as a Date class
power.data$Date <- as.Date(power.data$Date, "%d/%m/%Y")
power.data <-
subset(power.data, Date == as.Date("2007-02-01") | Date == as.Date("2007-02-02"))
# Create a new column, Timestamp, that records both the date and the time.
power.data$Timestamp <- as.POSIXct(paste(power.data$Date, power.data$Time))
# Transform the columns as numeric class
for(i in 1:10){
if(!(names(power.data)[i] %in% c("Date","Time", "Timestamp"))){
power.data[,i] <- as.numeric((power.data[,i]))
}
}
# Create a histogram of Global Active Power and print it as a PNG file.
png('plot1.png', width = 480, height = 480, bg='transparent')
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
dev.off()
# Return to default margins
par(mfrow = c(1,1))
plot1.R
Rscript plot1.R
source('plot1.R')
source('E:\Joseph's Files\Coursera\Data Science\R Workspace\4-Project-1\plot1.R')
source("E:\Joseph's Files\Coursera\Data Science\R Workspace\4-Project-1\plot1.R"")
source("E:\Joseph's Files\Coursera\Data Science\R Workspace\4-Project-1\plot1.R")
directory <- "E:\Joseph's Files\Coursera\Data Science\R Workspace\4-Project-1"
source('plot1.R')
source('plot1.R')
curr.dev()
dev.curr()
dev.cur()
source('plot1.R')
png('plot1.png', width = 480, height = 480, bg='transparent')
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
dev.off()
par(mfrow = c(1,1))
png('plot1.png', width = 480, height = 480, bg='transparent')
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
dev.off()
hist(power.data$Global_active_power, xlab = "Global Active Power (kilowatts)", main = "Global Active Power", col = 'red')
setwd("E:/Joseph's Files/Coursera/Data Science/Workspace/RepData_PeerAssessment1")
